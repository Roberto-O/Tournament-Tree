/* 
 * Roberto Olivera
 * 4/7/18
 *
 * Enter data and it'll create a tree
 * 
 */

import java.awt.*;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.*;

public class MUFrame extends javax.swing.JFrame {

    ArrayList<String> teamNames = new ArrayList<>();
    LinkedQ tournyQ = new LinkedQ();
    BinaryTree tournyWinner;
    
    public MUFrame() {
        initComponents();

    } // end of constructor
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        inputArea = new javax.swing.JTextArea();
        readButton = new javax.swing.JButton();
        showButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        outputArea = new javax.swing.JTextArea();
        playersComBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Roberto Program #5");

        inputArea.setColumns(20);
        inputArea.setRows(5);
        jScrollPane1.setViewportView(inputArea);

        readButton.setText("Read Data");
        readButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readButtonActionPerformed(evt);
            }
        });

        showButton.setText("Show Tournament History");
        showButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showButtonActionPerformed(evt);
            }
        });

        outputArea.setColumns(20);
        outputArea.setRows(5);
        jScrollPane2.setViewportView(outputArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addComponent(jScrollPane2))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(readButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                        .addComponent(playersComBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(showButton)
                        .addGap(30, 30, 30))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(showButton)
                    .addComponent(readButton)
                    .addComponent(playersComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void readButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readButtonActionPerformed
        String lines[] = inputArea.getText().split("\\r?\\n");
        
        int players = Integer.valueOf(lines[0]); 
        
        for(int i = 1; i <= players; i++){ //add names to arraylist
            BinTreeNode firstRound = new BinTreeNode(lines[i], ""); //add names to queue
            tournyQ.enqueue(firstRound);
            teamNames.add(firstRound.name);
        }
        
        Collections.sort(teamNames); //sort names for combobox
        
        for(int i = 0; i < teamNames.size(); i++){ //add items to combobox 
            playersComBox.addItem(teamNames.get(i));
        }
        
        int index = players + 1; 
        
        while ( index < lines.length){
            int numGamesThisRound = Integer.parseInt(lines[index]); // equals four
            index++; 
            
            for(int i = 0; i < numGamesThisRound; i++){
                String currLine = lines[index];
                index++; 
                String name = currLine.substring(0, currLine.indexOf(' '));
                String scores = currLine.substring(currLine.indexOf(' ') + 1);
                System.out.println(name + " -- " + scores );
                
                BinTreeNode nRound = new BinTreeNode(name, scores);
                nRound.addLeftSubTree(tournyQ.dequeue());
                nRound.addRightSubTree(tournyQ.dequeue());
                tournyQ.enqueue(nRound);
            }//end for
            
        }//end while
        
        tournyWinner = new BinaryTree();
        tournyWinner.setRoot(tournyQ.dequeue());
        System.out.println(tournyWinner.height() + "");
    }//GEN-LAST:event_readButtonActionPerformed

    private void showButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showButtonActionPerformed
        outputArea.setText("");
        
        String player = (String) playersComBox.getSelectedItem();
        outputArea.append(tournyWinner.tournamentHistory(player));
    }//GEN-LAST:event_showButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MUFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea inputArea;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea outputArea;
    private javax.swing.JComboBox<String> playersComBox;
    private javax.swing.JButton readButton;
    private javax.swing.JButton showButton;
    // End of variables declaration//GEN-END:variables
}
